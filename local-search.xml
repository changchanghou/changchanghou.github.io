<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>全文检索ElasticSearch</title>
    <link href="/2021/01/29/elasticsearch/"/>
    <url>/2021/01/29/elasticsearch/</url>
    
    <content type="html"><![CDATA[<h1 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h1><h2 id="1-什么是全文检索？"><a href="#1-什么是全文检索？" class="headerlink" title="1. 什么是全文检索？"></a>1. 什么是全文检索？</h2><p><strong><code>全文检索</code>是计算机程序通过扫描文章中的每一个词，对每一个词建立一个索引，指明该词在文章中出现的次数和位置。当用户查询时根据建立的索引查找，类似于通过字典的检索字表查字的过程。</strong></p><p>全文检索以文本作为检索对象，找出含有指定词汇的文本。**<code>全面</code><strong>、</strong><code>准确</code><strong>、</strong><code>快速</code>**</p><p>关于全文检索：</p><ol><li><strong>只处理文本，不处理语义。</strong></li><li><strong>搜索时英文不区分大小写。</strong></li><li><strong>结果列表有相关度排序。</strong></li></ol><h2 id="2-什么是Elastic-Search"><a href="#2-什么是Elastic-Search" class="headerlink" title="2. 什么是Elastic Search"></a>2. 什么是Elastic Search</h2><p><strong>ElasticSearch</strong>简称<strong>ES</strong>，是<strong>基于Apache Lucene构建的开源搜索引擎，是当前流行的企业级搜索引擎</strong>。Lucene本身就可以被认为迄今为止性能最好的一款开源搜索引擎工具包，但是Lucene的API相对复杂，需要深厚的搜索理论。很难集成到实际的应用中去。<strong>但是ES是采用java语言编写，提供了简单易用的RestFul API，开发者可以使用其简单的RestFul API来开发相关的搜索功能，从而避免Lucene的复杂性</strong>。</p><h2 id="3-ES的实际应用"><a href="#3-ES的实际应用" class="headerlink" title="3. ES的实际应用"></a>3. ES的实际应用</h2><p><strong>ES主要以轻量级JSON作为数据存储格式，同时支持地理位置查询，方便地理位置和文本混合查询。在统计、日志类数据存储和分析、可视化方面是引领者。</strong></p><ul><li><p><strong>国外</strong></p><p><strong>Wikipedia</strong>(维基百科)使用ES提供全文搜索并高亮关键字、<strong>StackOverflow</strong>(IT问答网站)结合全文搜索与地理位置查询、<strong>Github</strong>使用Elasticsearch检索1300亿行代码。</p></li><li><p><strong>国内</strong></p><p><strong>百度</strong>、<strong>新浪</strong>、<strong>阿里巴巴</strong>、<strong>腾讯</strong>等公司均有对ES的使用。</p></li></ul><h2 id="4-ES安装"><a href="#4-ES安装" class="headerlink" title="4. ES安装"></a>4. ES安装</h2><blockquote><p>安装与启动（Windows）：</p><ol><li>官网<a href="https://www.elastic.co/cn/elasticsearch/%E4%B8%8B%E8%BD%BD%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%ACzip%E5%8C%85%E8%A7%A3%E5%8E%8B%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%9B%AE%E5%BD%95">https://www.elastic.co/cn/elasticsearch/下载指定版本zip包解压到本地目录</a></li><li>双击执行bin目录下elasticsearch.bat文件，浏览器访问localhost:9200</li></ol></blockquote><p>启动成功</p><p><img src="/2021/01/29/elasticsearch/ES%E8%AE%BF%E9%97%AE.png" alt="ES访问"></p><p>注意：</p><ul><li><p>ElasticSearch安装包应该放在没有<code>空格</code>和<code>汉字</code>的路径下，否则请求时会出现500</p></li><li><p>启动ES终端可能会出现中文乱码的问题，修改config目录下jvm.options配置文件 <code>-Dfile.encoding=GBK</code> 即可</p></li></ul><h2 id="5-ES中基本概念"><a href="#5-ES中基本概念" class="headerlink" title="5. ES中基本概念"></a>5. ES中基本概念</h2><h3 id="5-1-接近实时-NRT-Near-Real-Time"><a href="#5-1-接近实时-NRT-Near-Real-Time" class="headerlink" title="5.1 接近实时(NRT Near Real Time)"></a>5.1 接近实时(NRT Near Real Time)</h3><p><strong>Elasticsearch是一个接近实时的搜索平台</strong>。这意味着，<strong>从索引一个文档到这个文档能够被搜索到有一个轻微的延迟(通常是1秒内)</strong></p><h3 id="5-2-索引-index"><a href="#5-2-索引-index" class="headerlink" title="5.2 索引(index)"></a>5.2 索引(index)</h3><p><strong>一个索引就是一个拥有几分相似特征的文档的集合</strong> 。<strong>一个索引由一个名字来标识(必须全部是小写字母)，当我们对索引中的文档进行搜索、更新和删除时都要用到这个名字</strong>。索引类似关系型数据库中的Database概念。</p><h3 id="5-3-类型-type"><a href="#5-3-类型-type" class="headerlink" title="5.3 类型(type)"></a>5.3 类型(type)</h3><p>类型是索引的一个逻辑上的分类，通常会<strong>把具有一组共同字段的文档定义为一个类型</strong>。</p><p>5.x版本一个索引可以定义一种或多种类型，6.x版本可以使用但不推荐，<strong>7.0版本之后不再支持类型，默认为</strong><code> _doc</code></p><h3 id="5-4-映射-mapping"><a href="#5-4-映射-mapping" class="headerlink" title="5.4 映射(mapping)"></a>5.4 映射(mapping)</h3><p><strong>Mapping</strong>是ES中一个很重要的内容，<strong>它类似于传统关系型数据中table的schema，用于定义一个索引(index)中类型(type)的数据的结构</strong>。在ES中，我们可以手动创建mapping，也可采用默认创建方式。<strong>在默认配置下，ES可以根据插入的数据自动创建mapping。mapping中主要包括字段名、字段数据类型和字段索引类型。</strong></p><h3 id="5-5-文档-document-和字段-field"><a href="#5-5-文档-document-和字段-field" class="headerlink" title="5.5 文档(document)和字段(field)"></a>5.5 文档(document)和字段(field)</h3><p><strong>一个文档是一个可被索引的基础信息单元，类似于表中的一条记录。</strong>文档以采用了轻量级的数据交换格式JSON(JavaScript Object Notation)来表示。一个文档中有多个字段</p><h2 id="6-Kibana安装"><a href="#6-Kibana安装" class="headerlink" title="6. Kibana安装"></a>6. Kibana安装</h2><blockquote><p>安装与启动（Windows）：</p><ol><li>官网下载压缩包解压到本地</li><li>启动kibana：双击bin目录下kibana.bat文件，浏览器访问localhost:5601</li></ol></blockquote><p>注意：</p><ul><li>kibana版本需要与elasticsearch一致</li><li>kibana默认连接本地的elasticsearch服务，需要连其他服务器需修改config/kibana.yml文件中elasticsearch.hosts的值</li></ul><h2 id="7-IK分词器"><a href="#7-IK分词器" class="headerlink" title="7. IK分词器"></a>7. IK分词器</h2><blockquote><p>NOTE：默认ES中采用标准分词器进行分词，对中文采用单字分词、英文采用单词分词。这种方式并不适用于中文，因此需要修改ES对中文友好分词，从而得到更佳的效果</p></blockquote><h3 id="7-1-安装IK分词器"><a href="#7-1-安装IK分词器" class="headerlink" title="7.1 安装IK分词器"></a>7.1 安装IK分词器</h3><ol><li>点击<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases%E4%B8%8B%E8%BD%BD%E5%AF%B9%E5%BA%94%E7%89%88%E6%9C%AC%E7%9A%84IK%E5%88%86%E8%AF%8D%E5%99%A8">https://github.com/medcl/elasticsearch-analysis-ik/releases下载对应版本的IK分词器</a></li><li>在elasticsearch安装包的plugins文件下创建文件夹analysis-ik，将IK压缩包解压到该文件夹</li><li>重启es即可使用</li></ol><blockquote><p>NOTE：要求ik版本必须与ES版本一致</p></blockquote><h3 id="7-2-测试IK分词器"><a href="#7-2-测试IK分词器" class="headerlink" title="7.2 测试IK分词器"></a>7.2 测试IK分词器</h3><p>IK分词器提供了两种mapping类型用来做文档的分词，分别是<code>ik_max_word</code>和<code>ik_smart</code></p><blockquote><p><code>ik_max_word 和 ik_smart有什么区别？</code></p><p><code>ik_max_word</code>：会将文本做最细粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国，中华人民，中华，华人，人民共和国，人民，人，人民，共和国，共和，和，国国，国歌；</p><p><code>ik_smart</code>：会做最粗粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国，国歌”。</p></blockquote><p>分词测试</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json">GET /_analyze<br>&#123;<br>  <span class="hljs-attr">&quot;text&quot;</span>: <span class="hljs-string">&quot;中华人民共和国国歌&quot;</span>,<br>  <span class="hljs-attr">&quot;analyzer&quot;</span>: <span class="hljs-string">&quot;ik_smart&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7-3-配置扩展词典与停用词典"><a href="#7-3-配置扩展词典与停用词典" class="headerlink" title="7.3 配置扩展词典与停用词典"></a>7.3 配置扩展词典与停用词典</h3><blockquote><p>NOTE：IK支持自定义<code>扩展词典</code>和<code>停用词典</code>，所谓<code>扩展词典</code>就是有些词并不是关键词，但是也希望被ES用来作为检索的关键词，可以将这些词加入扩展词典。如：“碰瓷”、“杠精”、“我太难了”等等。<code>停用词典</code>就是有些词是关键词，但是出于业务场景不想让这些关键词被检索到，可以将这些词放入停用词典。</p><p>词典文件一行一个词</p></blockquote><p>配置扩展词典和停用词典：修改IK分词器config目录下<code>IKAnalyzer.cfg.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">properties</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://java.sun.com/dtd/properties.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">comment</span>&gt;</span>IK Analyzer 扩展配置<span class="hljs-tag">&lt;/<span class="hljs-name">comment</span>&gt;</span><br><span class="hljs-comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span><br><span class="hljs-comment">&lt;!--&lt;entry key=&quot;ext_dict&quot;&gt;/my_word.dic&lt;/entry&gt;--&gt;</span><br> <span class="hljs-comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span><br><span class="hljs-comment">&lt;!--&lt;entry key=&quot;ext_stopwords&quot;&gt;my_stopwords.dic&lt;/entry&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--用户可以在这里配置远程扩展字典,文件格式UTF-8 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;remote_ext_dict&quot;</span>&gt;</span>http://127.0.0.1:8087/es/my_word.txt<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span><br><span class="hljs-comment">&lt;!--用户可以在这里配置远程扩展停止词字典,文件格式UTF-8--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;remote_ext_stopwords&quot;</span>&gt;</span>http://127.0.0.1:8087/es/my_stopwords.txt<span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="8-Kibana基本操作"><a href="#8-Kibana基本操作" class="headerlink" title="8. Kibana基本操作"></a>8. Kibana基本操作</h2><h3 id="8-1-索引-Index-的基本操作"><a href="#8-1-索引-Index-的基本操作" class="headerlink" title="8.1 索引(Index)的基本操作"></a>8.1 索引(Index)的基本操作</h3><h4 id="8-1-1-索引增删操作"><a href="#8-1-1-索引增删操作" class="headerlink" title="8.1.1 索引增删操作"></a>8.1.1 索引增删操作</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs http">PUT /ems创建索引<br>DELETE /ems删除索引<br>DELETE /*删除所有索引（包括kibana自动创建的索引，kibana无法正常运行需要重启）<br></code></pre></td></tr></table></figure><h4 id="8-1-2-创建带有映射的索引"><a href="#8-1-2-创建带有映射的索引" class="headerlink" title="8.1.2 创建带有映射的索引"></a>8.1.2 创建带有映射的索引</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs json">PUT /employee<br>&#123;<br>  <span class="hljs-attr">&quot;settings&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;number_of_shards&quot;</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">&quot;number_of_replicas&quot;</span>: <span class="hljs-number">0</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;mappings&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;properties&quot;</span>: &#123;<br>      <span class="hljs-attr">&quot;indexId&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;long&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;name&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>        <span class="hljs-attr">&quot;analyzer&quot;</span>: <span class="hljs-string">&quot;ik_smart&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;sex&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;keyword&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;age&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;integer&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;birth&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;date&quot;</span>,<br>        <span class="hljs-attr">&quot;format&quot;</span>: <span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;description&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>        <span class="hljs-attr">&quot;analyzer&quot;</span>: <span class="hljs-string">&quot;ik_smart&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;hobby&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>        <span class="hljs-attr">&quot;analyzer&quot;</span>: <span class="hljs-string">&quot;ik_smart&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;dept&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>        <span class="hljs-attr">&quot;analyzer&quot;</span>: <span class="hljs-string">&quot;ik_smart&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;isRegular&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;boolean&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>GET /employee/_mapping查看映射<br></code></pre></td></tr></table></figure><blockquote><p>mapping type：<strong>keyword、text、integer、long、double、date、boolean、ip</strong></p></blockquote><h4 id="8-1-3-查看索引信息"><a href="#8-1-3-查看索引信息" class="headerlink" title="8.1.3 查看索引信息"></a>8.1.3 查看索引信息</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /_cat/indices?v查看索引信息<br></code></pre></td></tr></table></figure><p>查询结果参数详解</p><blockquote><p><code>health</code>：索引状态，green 索引健壮、yellow索引可用但不健壮（主分片和副本分片在同一台机器）、red索引不可用</p><p><code>pri</code>：主分片个数</p><p><code>rep</code>：副本分片个数</p><p><code>docs.count</code>：存储的文档个数</p><p><code>docs.deleted</code>：删除文档个数</p><p><code>store.size</code>：文档存储的大小</p><p><code>pri.store.size</code>：主分片存储的大小</p></blockquote><h3 id="8-2-文档-Document-的基本操作"><a href="#8-2-文档-Document-的基本操作" class="headerlink" title="8.2 文档(Document)的基本操作"></a>8.2 文档(Document)的基本操作</h3><h4 id="ES中索引库存储原理图"><a href="#ES中索引库存储原理图" class="headerlink" title="ES中索引库存储原理图"></a>ES中索引库存储原理图</h4><p><img src="/elasticsearch.assets/3.ES%E4%B8%AD%E7%B4%A2%E5%BC%95%E7%9A%84%E5%BA%93%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.jpg" alt="3.ES中索引的库的底层原理"></p><h4 id="添加文档"><a href="#添加文档" class="headerlink" title="添加文档"></a>添加文档</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs json">#随机生成id式新增<br>POST /employee/_doc<br>&#123;<br>  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;张三&quot;</span>,<br>  <span class="hljs-attr">&quot;age&quot;</span>: <span class="hljs-number">23</span>,<br>  <span class="hljs-attr">&quot;sex&quot;</span>: <span class="hljs-string">&quot;男&quot;</span>,<br>  <span class="hljs-attr">&quot;content&quot;</span>: <span class="hljs-string">&quot;江湖人物&quot;</span><br>&#125;<br><br>#指定id式新增（id如果已经存在，则是删除原来数据重新新增）<br>PUT /employee/_doc/1<br>&#123;<br>  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;张三&quot;</span>,<br>  <span class="hljs-attr">&quot;age&quot;</span>: <span class="hljs-number">26</span><br>&#125;<br><br>#指定id新增（若id已经存在，则是先删除后新增）<br>POST /employee/_doc/1<br>&#123;<br>  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;六六&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="查询文档"><a href="#查询文档" class="headerlink" title="查询文档"></a>查询文档</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /employee/_doc/1<br></code></pre></td></tr></table></figure><h4 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs json">DELETE /employee/_doc/1<br>#返回结果：<br>&#123;<br>  <span class="hljs-attr">&quot;_index&quot;</span> : <span class="hljs-string">&quot;employee&quot;</span>,<br>  <span class="hljs-attr">&quot;_type&quot;</span> : <span class="hljs-string">&quot;_doc&quot;</span>,<br>  <span class="hljs-attr">&quot;_id&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>,<br>  <span class="hljs-attr">&quot;_version&quot;</span> : <span class="hljs-number">5</span>,<br>  <span class="hljs-attr">&quot;result&quot;</span> : <span class="hljs-string">&quot;deleted&quot;</span>,<br>  <span class="hljs-attr">&quot;_shards&quot;</span> : &#123;<br>    <span class="hljs-attr">&quot;total&quot;</span> : <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">&quot;successful&quot;</span> : <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">&quot;failed&quot;</span> : <span class="hljs-number">0</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;_seq_no&quot;</span> : <span class="hljs-number">13</span>,<br>  <span class="hljs-attr">&quot;_primary_term&quot;</span> : <span class="hljs-number">1</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="更新文档"><a href="#更新文档" class="headerlink" title="更新文档"></a>更新文档</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json">#方式1 原有数据基础上更新<br>POST /employee/_update/1<br>&#123;<br>  <span class="hljs-attr">&quot;doc&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;王武&quot;</span>,<br>    <span class="hljs-attr">&quot;age&quot;</span>: <span class="hljs-number">25</span>,<br>    <span class="hljs-attr">&quot;sex&quot;</span>: <span class="hljs-string">&quot;男&quot;</span>,<br>    <span class="hljs-attr">&quot;hobby&quot;</span>: <span class="hljs-string">&quot;打篮球&quot;</span><br>  &#125;<br>&#125;<br><br>#方式2 <br>POST /employee/_update/1<br>&#123;<br>  <span class="hljs-attr">&quot;script&quot;</span>: <span class="hljs-string">&quot;ctx._source.age += 5&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="批量操作"><a href="#批量操作" class="headerlink" title="批量操作"></a>批量操作</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /employee/_bulk<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>: &#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;女演员1号&quot;</span>,<span class="hljs-attr">&quot;age&quot;</span>:<span class="hljs-number">33</span>,<span class="hljs-attr">&quot;sex&quot;</span>:<span class="hljs-string">&quot;女&quot;</span>,<span class="hljs-attr">&quot;birth&quot;</span>:<span class="hljs-string">&quot;1987-10-09&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;毕业于重庆大学美视电影学院表演系，中国内地女演员。2011年，出演个人首部电视剧《后宫·甄嬛传》，并凭借此剧而在演艺圈崭露头角。2013年，出演个人首部电影《西游·降魔篇》。&quot;</span>,<span class="hljs-attr">&quot;isRegular&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;dept&quot;</span>:<span class="hljs-string">&quot;数据智能部&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;女演员2号&quot;</span>,<span class="hljs-attr">&quot;age&quot;</span>:<span class="hljs-number">32</span>,<span class="hljs-attr">&quot;sex&quot;</span>:<span class="hljs-string">&quot;男&quot;</span>,<span class="hljs-attr">&quot;birth&quot;</span>:<span class="hljs-string">&quot;1988-08-24&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;2004年，通过参演首部电视剧《海的誓言》而进入演艺圈。2011年，凭借励志革命剧《黑狐》中方天翼一角广受关注，并演唱片尾曲《坚强的人》，夺得“最受观众喜爱的电视剧新人”奖、第二届乐视影视盛典电视剧最佳新人奖。2013年，在战争剧《新雪豹》中出演男主角周卫国&quot;</span>,<span class="hljs-attr">&quot;isRegular&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;dept&quot;</span>:<span class="hljs-string">&quot;数据智能部&quot;</span>&#125;<br><br>#没有任何更新返回的result值为noop<br>PUT /employee/_bulk<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>: &#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;女演员1号&quot;</span>,<span class="hljs-attr">&quot;age&quot;</span>:<span class="hljs-number">33</span>,<span class="hljs-attr">&quot;sex&quot;</span>:<span class="hljs-string">&quot;女&quot;</span>,<span class="hljs-attr">&quot;birth&quot;</span>:<span class="hljs-string">&quot;1987-10-09&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;毕业于重庆大学美视电影学院表演系，中国内地女演员。2011年，出演个人首部电视剧《后宫·甄嬛传》，并凭借此剧而在演艺圈崭露头角。2013年，出演个人首部电影《西游·降魔篇》。&quot;</span>,<span class="hljs-attr">&quot;isRegular&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;dept&quot;</span>:<span class="hljs-string">&quot;数据智能部&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;女演员2号&quot;</span>,<span class="hljs-attr">&quot;age&quot;</span>:<span class="hljs-number">32</span>,<span class="hljs-attr">&quot;sex&quot;</span>:<span class="hljs-string">&quot;男&quot;</span>,<span class="hljs-attr">&quot;birth&quot;</span>:<span class="hljs-string">&quot;1988-08-24&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;2004年，通过参演首部电视剧《海的誓言》而进入演艺圈。2011年，凭借励志革命剧《黑狐》中方天翼一角广受关注，并演唱片尾曲《坚强的人》，夺得“最受观众喜爱的电视剧新人”奖、第二届乐视影视盛典电视剧最佳新人奖。2013年，在战争剧《新雪豹》中出演男主角周卫国&quot;</span>,<span class="hljs-attr">&quot;isRegular&quot;</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">&quot;dept&quot;</span>:<span class="hljs-string">&quot;数据智能部&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;update&quot;</span>: &#123;<span class="hljs-attr">&quot;_id&quot;</span>: <span class="hljs-string">&quot;EK1JpHMBI0WREregx42R&quot;</span>&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;doc&quot;</span>:&#123;<span class="hljs-attr">&quot;name&quot;</span>:<span class="hljs-string">&quot;女演员2号i&quot;</span>&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;delete&quot;</span>: &#123;<span class="hljs-attr">&quot;_id&quot;</span>: <span class="hljs-string">&quot;EK1JpHMBI0WREregx42R&quot;</span>&#125;&#125;<br><br>注意：批量时不会因为一个数据失败而失败，而是会继续执行后续操作，批量在返回时按照执行的状态开始返回<br></code></pre></td></tr></table></figure><h2 id="9-ES高级检索"><a href="#9-ES高级检索" class="headerlink" title="9. ES高级检索"></a>9. ES高级检索</h2><h3 id="9-1-检索方式-search"><a href="#9-1-检索方式-search" class="headerlink" title="9.1 检索方式_search"></a>9.1 检索方式_search</h3><p>ES官方提供两种检索方式：<strong>一种是通过URL参数进行搜索，另一种是通过DSL(Domain Specified Language)进行搜索。官方更推荐使用第二种方式，因为第二种方方式是基于传递JSON作为请求体(request body)格式与ES进行交互，这种方式更强大、更简洁。</strong></p><p><img src="/2021/01/29/elasticsearch/../images/elasticsearch.assets/image-20200701225025975.png" alt="image-20200701225025975"></p><ul><li><p>使用语法</p><p>URL查询：GET /索引/_search?参数</p><p>DSL查询：GET/索引/_search {}</p></li></ul><h3 id="9-2-测试数据准备"><a href="#9-2-测试数据准备" class="headerlink" title="9.2 测试数据准备"></a>9.2 测试数据准备</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs json">#1. 创建索引<br>PUT /course<br>&#123;<br>  <span class="hljs-attr">&quot;settings&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;number_of_shards&quot;</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">&quot;number_of_replicas&quot;</span>: <span class="hljs-number">0</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;mappings&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;properties&quot;</span>: &#123;<br>      <span class="hljs-attr">&quot;courseId&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;long&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;title&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>        <span class="hljs-attr">&quot;analyzer&quot;</span>: <span class="hljs-string">&quot;ik_max_word&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;description&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>        <span class="hljs-attr">&quot;analyzer&quot;</span>: <span class="hljs-string">&quot;ik_max_word&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;price&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;double&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;lecture&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;keyword&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;difficulty&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;keyword&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;learningNum&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;integer&quot;</span><br>      &#125;,<br>      <span class="hljs-attr">&quot;updateTime&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;date&quot;</span>,<br>        <span class="hljs-attr">&quot;format&quot;</span>: <span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>#批量添加数据<br>PUT /course/_bulk<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9601</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;Vue2.5-&gt;2.6-&gt;3.0开发去哪儿网App从零基础入门到实战项目开发&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;课程跟随Vue版本迭代升级，结合理论与项目带你掌握Vue开发的基础知识与开发技巧。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">266.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;Dell&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">5173</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-05-21 10:00:00&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9602</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;Vue2.0开发企业级移动端音乐Web App&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;全网稀缺的Vue.js高级应用实战教学&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">399.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;ustbhuangyi&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;高级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">5173</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-05-12 21:00:00&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9603</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;axios在Vue中的使用&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;本课程包含axios的基本数据请求，实例配置讲解以及在项目中的应用封装。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;小吕&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;leaningNum&quot;</span>:<span class="hljs-number">18771</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-02-27&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseid&quot;</span>:<span class="hljs-number">9604</span>,<span class="hljs-attr">&quot;title&quot;</span>: <span class="hljs-string">&quot;3小时速成 Vue2.x 核心技术&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>: <span class="hljs-string">&quot;通过本课程，大家可以了解vue2.x的核心技术，建立前端组件化的思想，包括：常用的vue语法，vue-router，vuex，vue-cli等。我会手把手带大家使用vue-cli工具，快速构建vue项目。认识项目目录的同时，学会如何集成vue2.x到已有项目中，以及调试vue组件。从理论到实践，从小白到熟悉应用，我们配合实际的多案例共同进步。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">0.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;Brian&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">68092</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-05-01&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9605</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;适合后端编程人员的elasticsearch快速实战教程&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;elasticsearch6.8.0已更新结合springboot2.x已上线,赶紧来GET吧!&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">0.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;编程不良人&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">8804</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-07-09 06:00:26&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9606</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;图解+仿写 新手都能学懂的SpringBoot源码课&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;Java开发必会、行业风向标级框架，BAT架构师带你一课攻克SpringBoot源码&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">366.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;跳跳虎&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">741</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2019-12-25 08:05:12&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9607</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;SpringBoot短视频小程序开发全栈式实战项目&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;本课程基于微信小程序和目前主流的后端技术SpringBoot/SpringMVC来实现一个完整的短视频小程序App。通过对本套课程的学习，可以使你独立开发一个短视频小程序并部署到腾讯云上，掌握全栈式开发，更是毕业设计利器！&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">348.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;风间影月&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">2172</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-05-01&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9608</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;Spring Boot2.0不容错过的新特性 WebFlux响应式编程&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;北京时间 3 月 1 日，SpringBoot2.0 正式发布。作为 Spring 生态中的重要开源项目， SpringBoot2.0 中加入了众多令人激动的新特性，其中最亮眼的，莫过于使用 Spring WebFlux提供响应式 Web 编程。本课程从基础讲解到实践，带你玩转SpringBoot2.0响应式编程。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">128</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;晓风轻&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">968</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-01-01 11:00:00&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9609</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;Springboot 微信小程序 – 微信登录功能实战&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;通过学习本课程可以掌握如何使用微信api，如何使用httpClient工具跨服务器调用微信url，掌握如何解析string到自己封装的model，掌握自定义会话保存至redis&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">0.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;风间影月&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;初级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">41869</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-03-15 11:40:53&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9610</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;JavaScript版数据结构与算法 轻松解决前端算法&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;本课程带你用JS语言解决LeetCode上的经典算法题，对每一道题都进行线上测试，每题都有时间/空间复杂度分析。结合前端实际开发情景，带你掌握数据结构与算法。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">299</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;lewis&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">400</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2019-11-18 21:00:02&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9611</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;适合后端开发人员的bootstrap超详细使用教程,结合springboot案例&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;bootstrap超详细入门教程,赶紧来GET吧！&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;编程不良人&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">8454</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-06-16 00:08:53&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9612</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;适用于后端编程人员的Vue实战教程,整合SpringBoot项目案例&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;百知教育Vue男哥经典教程&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;编程不良人&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;初级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">4200</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-03-08 02:36:17&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9613</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;Node.js从零开发Web Server博客项目 前端晋升全栈工程师必备&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;本课程以博客项目为主线，由浅入深讲解 Node.js 基础知识、框架和插件原理、web Server 的特点与必备模块；同时运用 Node.js 原生和常用框架Express、Koa2框架三种方式开发web Server，在项目开发过程中全面掌握Node.js。掌握全栈工程师必备技能，为你带来开发和求职的双重收获！&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">288.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;双越&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">2268</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-03-01 00:01:20&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9614</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;Nodejs全栈入门&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;整个项目重点分为2部分，前端通过react+redux实现UI界面和状态管理，后端使用express做web框架，使用mysql作为数据存储，利用 sequelize作为ORM，便于通过nodejs管理和操作mysql。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">199.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;一缕孤烟&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">15187</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-05-06 22:30:09&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9615</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;告别996，开启Java高效编程之门&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;本课程剑指Java高效编程，致力于从“技术”和“工具”两大 维度提高编程效率，帮助广大程序员或者未来的程序员逃离“996的魔咒”，塑造“代码洁癖”的编程风格。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">288</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;张小喜&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;初级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">1003</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-01-05 21:45:12&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9616</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;剑指Java自研框架，决胜Spring源码&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;通过从0搭建一个较为完备的web框架来提升自己的框架设计能力，同时能够管中窥豹，去了解Spring框架的设计思路，再辅以通俗易懂的Spring核心模块源码的讲解，将课程门槛拉低，让大家通过学习本门课程后能够通过自己学习读懂Spring乃至其他框架的源码。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">399.00</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;翔仔&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">608</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2020-07-12&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9617</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;一站式学习Redis 从入门到高可用分布式实践&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;课程包含Redis基础，使用经验介绍、Java，Python客户端示范、Redis使用规范，由浅入深讲解并伴有企业中Redis开发的相关项目以及大规模Redis的实战经验，是开发和运维人员系统学习Redis的必备内容&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">348</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;carlosfu&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">1854</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2019-11-23 09:23:40&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9618</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;性能优化之MySQL优化&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;目前数据库是大多数系统进行数据存储的基础组件，数据库的效率对系统的稳定和效率有着至关重要的影响；为了有更好的用户体验，数据库的优化显得异常重要。那么我们要从那些方面对我们的数据库进行优化呢？让我们在这门课程中共同探讨一起学习吧！&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">189</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;sqlercn&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">94077</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2019-05-30 00:16:29&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9619</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;MySQL开发技巧（二）&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;一个不懂SQL技巧的程序员不是一个好程序员。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">69</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;sqlercn&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">58675</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2019-10-05 15:10:00&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9620</span>,<span class="hljs-attr">&quot;title&quot;</span>:<span class="hljs-string">&quot;MySQL开发技巧（三）&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>:<span class="hljs-string">&quot;一个不懂SQL技巧的程序员不是一个好程序员。&quot;</span>,<span class="hljs-attr">&quot;price&quot;</span>:<span class="hljs-number">69</span>,<span class="hljs-attr">&quot;lecture&quot;</span>:<span class="hljs-string">&quot;sqlercn&quot;</span>,<span class="hljs-attr">&quot;difficulty&quot;</span>:<span class="hljs-string">&quot;中级&quot;</span>,<span class="hljs-attr">&quot;learningNum&quot;</span>:<span class="hljs-number">5236</span>,<span class="hljs-attr">&quot;updateTime&quot;</span>:<span class="hljs-string">&quot;2019-10-10 14:30:29&quot;</span>&#125;<br>&#123;<span class="hljs-attr">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class="hljs-attr">&quot;courseId&quot;</span>:<span class="hljs-number">9621</span>,<span class="hljs-attr">&quot;title&quot;</span>: <span class="hljs-string">&quot;微信小程序入门与实战常用组件API开发技巧项目实战&quot;</span>,<span class="hljs-attr">&quot;description&quot;</span>: <span class="hljs-string">&quot;本课程中，讲师带你从0开始构建一个功能齐整的小程序，跟进当前潮流技术点，先人一步实现小程序开发组件化。&quot;</span>,<span class="hljs-attr">&quot;lecture&quot;</span>: <span class="hljs-string">&quot;七月&quot;</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-3-URL检索"><a href="#9-3-URL检索" class="headerlink" title="9.3 URL检索"></a>9.3 URL检索</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search?q=*&amp;size=10&amp;sort=updateTime:desc&amp;from=5&amp;_source=name,price<br></code></pre></td></tr></table></figure><blockquote><p>_search 搜索的API</p><p>​    q=*        匹配所有文档</p><p>​    sort        以结果中的指定字段进行排序</p><p>​    from        查询起始位置</p><p>​    _source    返回的字段</p></blockquote><h3 id="9-4-DSL高级检索（重点）"><a href="#9-4-DSL高级检索（重点）" class="headerlink" title="9.4 DSL高级检索（重点）"></a>9.4 DSL高级检索（重点）</h3><h4 id="9-4-1-查询所有"><a href="#9-4-1-查询所有" class="headerlink" title="9.4.1 查询所有"></a>9.4.1 查询所有</h4><blockquote><p><strong>match_all关键字</strong>：返回索引中全部文档（默认只返回10条数据）</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http">#查询所有课程<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;match_all&quot;: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-2-查询结果中返回指定条数（size）"><a href="#9-4-2-查询结果中返回指定条数（size）" class="headerlink" title="9.4.2 查询结果中返回指定条数（size）"></a>9.4.2 查询结果中返回指定条数（size）</h4><blockquote><p><strong>size关键字</strong>：指定查询结果中返回指定条数</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http">#查询前5条数据<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;match_all&quot;: &#123;&#125;<br>  &#125;,<br>  &quot;size&quot;:5<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-3-分页查询（from）"><a href="#9-4-3-分页查询（from）" class="headerlink" title="9.4.3 分页查询（from）"></a>9.4.3 分页查询（from）</h4><blockquote><p><strong>from关键字</strong>：用来指定起始返回位置，和<strong>size关键字连用可实现分页效果</strong></p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http">#每页5条数据，查第二页的数据<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;match_all&quot;: &#123;&#125;<br>  &#125;,<br>  &quot;from&quot;:5,<br>  &quot;size&quot;:5<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-4-查询结果中返回指定字段（-source）"><a href="#9-4-4-查询结果中返回指定字段（-source）" class="headerlink" title="9.4.4 查询结果中返回指定字段（_source）"></a>9.4.4 查询结果中返回指定字段（_source）</h4><blockquote><p><strong>_source关键字</strong>：是一个数组，在数组中用来指定展示哪些字段</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http">#指定查询返回字段title、price、difficulty<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;match_all&quot;: &#123;&#125;<br>  &#125;,<br>  &quot;_source&quot;: [&quot;title&quot;, &quot;price&quot;,&quot;difficulty&quot;]<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-5-关键字查询（term）"><a href="#9-4-5-关键字查询（term）" class="headerlink" title="9.4.5 关键字查询（term）"></a>9.4.5 关键字查询（term）</h4><blockquote><p><strong>term关键字</strong>：用来使用关键字查询（精确查询，搜索前不会对搜索词进行分词拆解）</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http">#查询课程标题带有“编程人员”的课程<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;term&quot;: &#123;<br>      &quot;title&quot;: &#123;<br>        &quot;value&quot;: &quot;编程人员&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http">#查询讲师是“编程不良人”的课程<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;term&quot;: &#123;<br>      &quot;lecture&quot;: &#123;<br>        &quot;value&quot;: &quot;编程不良人&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>NOTE：通过使用term查询可知，在ES的mapping type中keyword, integer, long, double, date, boolean, ip这些类型不进行分词，只有text类型进行分词。</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs http">#terms查询<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;terms&quot;: &#123;<br>      &quot;difficulty&quot;: [<br>        &quot;初级&quot;,<br>        &quot;高级&quot;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-6-关键词分词查询（match）"><a href="#9-4-6-关键词分词查询（match）" class="headerlink" title="9.4.6 关键词分词查询（match）"></a>9.4.6 关键词分词查询（match）</h4><blockquote><p><strong>match关键字</strong>：用来使用关键字查询（先对搜索词进行分词拆解，再同索引库进行匹配）</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http">#查询课程标题带有“编程人员”的课程<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;match&quot;: &#123;<br>      &quot;title&quot;: &quot;编程人员&quot;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-7-范围查询（range）"><a href="#9-4-7-范围查询（range）" class="headerlink" title="9.4.7 范围查询（range）"></a>9.4.7 范围查询（range）</h4><blockquote><p><strong>range关键字</strong>：用来指定查询指定范围内的文档</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs http">#查询课程价格在100以内的课程<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;range&quot;: &#123;<br>      &quot;price&quot;: &#123;<br>        &quot;gt&quot;: 0,<br>        &quot;lte&quot;: 100<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-8-前缀查询（prefix）"><a href="#9-4-8-前缀查询（prefix）" class="headerlink" title="9.4.8 前缀查询（prefix）"></a>9.4.8 前缀查询（prefix）</h4><blockquote><p><strong>prefix关键字</strong>：用来检索含有指定前缀的关键字的相关文档</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http">#根据my前缀搜索课程<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;prefix&quot;: &#123;<br>      &quot;title&quot;: &#123;<br>        &quot;value&quot;: &quot;my&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-9-通配符查询（wildcard）"><a href="#9-4-9-通配符查询（wildcard）" class="headerlink" title="9.4.9 通配符查询（wildcard）"></a>9.4.9 通配符查询（wildcard）</h4><blockquote><p><strong>wildcard关键字</strong>：通配符查询 ?用来匹配一个任意字符  *用来匹配多个任意字符</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http">#模糊匹配多个任意字符<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;wildcard&quot;: &#123;<br>      &quot;difficulty&quot;: &#123;<br>        &quot;value&quot;: &quot;*级&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-10-多id查询（ids）"><a href="#9-4-10-多id查询（ids）" class="headerlink" title="9.4.10 多id查询（ids）"></a>9.4.10 多id查询（ids）</h4><blockquote><p><strong>ids关键字</strong>：值为数组类型，用来根据一组id获取多个对应的文档</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;ids&quot;: &#123;<br>      &quot;values&quot;: [&quot;x2gQrnMBf4NRW_ZXWuBH&quot;, &quot;yGgQrnMBf4NRW_ZXWuBH&quot;]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-11-模糊查询（fuzzy）"><a href="#9-4-11-模糊查询（fuzzy）" class="headerlink" title="9.4.11 模糊查询（fuzzy）"></a>9.4.11 模糊查询（fuzzy）</h4><blockquote><p><strong>fuzzy关键字</strong>：用来模糊查询含有指定关键字的文档（最大模糊错误必须在0~2之间）</p><p><strong>NOTE</strong>：搜索关键词长度在1~2  不允许存在模糊 0</p><p>​                搜索关键词长度在3~5  允许一次模糊     0 1</p><p>​                搜索关键词长度大于5    允许最大模糊2</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;fuzzy&quot;: &#123;<br>      &quot;title&quot;: &quot;springbeet&quot;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-12-布尔查询（bool）"><a href="#9-4-12-布尔查询（bool）" class="headerlink" title="9.4.12 布尔查询（bool）"></a>9.4.12 布尔查询（bool）</h4><blockquote><p><strong>bool关键字</strong>：用来组合多个条件实现复杂查询</p><p>​    <strong>must：相当于and同时成立</strong></p><p>​    <strong>should：相当于or成立一个就行</strong></p><p>​    <strong>must_not：不能满足任何一个</strong></p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;bool&quot;: &#123;<br>      &quot;must&quot;: [<br>        &#123;<br>          &quot;term&quot;: &#123;<br>            &quot;title&quot;: &#123;<br>              &quot;value&quot;: &quot;springboot&quot;<br>            &#125;<br>          &#125;<br>        &#125;,<br>        &#123;<br>          &quot;term&quot;: &#123;<br>            &quot;difficulty&quot;: &#123;<br>              &quot;value&quot;: &quot;中级&quot;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ],<br>      &quot;must_not&quot;: [<br>        &#123;<br>          &quot;range&quot;: &#123;<br>            &quot;updateTime&quot;: &#123;<br>              &quot;lte&quot;: &quot;2019-12-31 23:59:59&quot;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-13-高亮查询（highlight）"><a href="#9-4-13-高亮查询（highlight）" class="headerlink" title="9.4.13 高亮查询（highlight）"></a>9.4.13 高亮查询（highlight）</h4><blockquote><p><strong>highlight关键字</strong>：可以让符合条件的文档中的关键词高亮</p><p><strong>自定义高亮html标签</strong>：可以在highlight中使用<code>pre_tags</code>和<code>post_tags</code></p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;term&quot;: &#123;<br>      &quot;description&quot;: &#123;<br>        &quot;value&quot;: &quot;springboot&quot;<br>      &#125;<br>    &#125;<br>  &#125;,<br>  &quot;highlight&quot;: &#123;<br>    &quot;pre_tags&quot;: [&quot;&lt;span style=&#x27;color:red&#x27;&gt;&quot;], <br>    &quot;post_tags&quot;: [&quot;&lt;/span&gt;&quot;], <br>    &quot;require_field_match&quot;: &quot;false&quot;, #默认为true,只对查询的字段进行高亮显示<br>    &quot;fields&quot;: &#123;<br>      &quot;*&quot;: &#123;&#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-14-多字段查询（multi-match）"><a href="#9-4-14-多字段查询（multi-match）" class="headerlink" title="9.4.14 多字段查询（multi_match）"></a>9.4.14 多字段查询（multi_match）</h4><blockquote><p><strong>multi_match关键字</strong>：多个字段中查询同一个关键词（先分词后匹配）</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;multi_match&quot;: &#123;<br>      &quot;query&quot;: &quot;项目&quot;,<br>      &quot;fields&quot;: [&quot;title&quot;, &quot;description&quot;]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-4-15-指定分词器分词查询（query-string）"><a href="#9-4-15-指定分词器分词查询（query-string）" class="headerlink" title="9.4.15 指定分词器分词查询（query_string）"></a>9.4.15 指定分词器分词查询（query_string）</h4><blockquote><p><strong>query_string关键字</strong>：先将查询内容按照分词器分词再做相应的匹配（默认不分词）</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;query_string&quot;: &#123;<br>      &quot;default_field&quot;: &quot;lecture&quot;,<br>      &quot;analyzer&quot;: &quot;ik_smart&quot;, <br>      &quot;query&quot;: &quot;编程不良人&quot;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="10-过滤查询-Filter-Query"><a href="#10-过滤查询-Filter-Query" class="headerlink" title="10. 过滤查询 Filter Query"></a>10. 过滤查询 Filter Query</h2><h3 id="10-1-过滤查询"><a href="#10-1-过滤查询" class="headerlink" title="10.1 过滤查询"></a>10.1 过滤查询</h3><blockquote><p>其实准确来说，ES中的查询操作分为2种: <code>查询(query)</code>和<code>过滤(filter)</code>。<code>查询即是之前提到的query查询，它 (查询)默认会计算每个返回文档的得分，然后根据得分排序</code>。<code>而过滤(filter)只会筛选出符合的文档，并不计算得分，且它可以缓存文档。所以，单从性能考虑，过滤比查询更快</code>。 </p><p>换句话说，过滤适合在大范围筛选数据，而查询则适合精确匹配数据。一般应用时， 应先使用过滤操作过滤数据， 然后使用查询匹配数据。</p></blockquote><h4 id="10-2-过滤语法"><a href="#10-2-过滤语法" class="headerlink" title="10.2 过滤语法"></a>10.2 过滤语法</h4><blockquote><p><strong>NOTE</strong>：</p><ol><li><p>在执行filter和query时，先执行filter后执行query</p></li><li><p>Elasticsearch会自动缓存经常使用的过滤器，以加快性能</p></li></ol></blockquote><h3 id="10-3-常见的过滤器类型"><a href="#10-3-常见的过滤器类型" class="headerlink" title="10.3 常见的过滤器类型"></a>10.3 常见的过滤器类型</h3><h4 id="10-3-1-term、terms-Filter"><a href="#10-3-1-term、terms-Filter" class="headerlink" title="10.3.1 term、terms Filter"></a>10.3.1 term、terms Filter</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs http"># 使用term过滤<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;bool&quot;: &#123;<br>      &quot;must&quot;: [<br>        &#123;<br>          &quot;term&quot;: &#123;<br>            &quot;description&quot;: &#123;<br>              &quot;value&quot;: &quot;编程&quot;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ],<br>      &quot;filter&quot;: &#123;<br>        &quot;term&quot;: &#123;<br>          &quot;difficulty&quot;: &quot;中级&quot;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs http"># 使用terms过滤<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;bool&quot;: &#123;<br>      &quot;must&quot;: [<br>        &#123;<br>          &quot;term&quot;: &#123;<br>            &quot;title&quot;: &#123;<br>              &quot;value&quot;: &quot;springboot&quot;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ],<br>      &quot;filter&quot;: &#123;<br>        &quot;terms&quot;: &#123;<br>          &quot;difficulty&quot;: [&quot;中级&quot;, &quot;初级&quot;]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="10-3-2-range-Filter"><a href="#10-3-2-range-Filter" class="headerlink" title="10.3.2 range Filter"></a>10.3.2 range Filter</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;bool&quot;: &#123;<br>      &quot;must&quot;: [<br>        &#123;<br>          &quot;match_all&quot;: &#123;&#125;<br>        &#125;<br>      ],<br>      &quot;filter&quot;: &#123;<br>        &quot;range&quot;: &#123;<br>          &quot;price&quot;: &#123;<br>            &quot;gte&quot;: 10,<br>            &quot;lte&quot;: 100<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="10-3-3-exists-filter"><a href="#10-3-3-exists-filter" class="headerlink" title="10.3.3 exists filter"></a>10.3.3 exists filter</h4><blockquote><p><strong>过滤存在指定字段，获取字段不为空的索引记录</strong></p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;bool&quot;: &#123;<br>      &quot;must&quot;: [<br>        &#123;<br>          &quot;match_all&quot;: &#123;&#125;<br>        &#125;<br>      ],<br>      &quot;filter&quot;: &#123;<br>        &quot;exists&quot;: &#123;<br>          &quot;field&quot;: &quot;difficulty&quot;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="10-3-4-ids-filter"><a href="#10-3-4-ids-filter" class="headerlink" title="10.3.4 ids filter"></a>10.3.4 ids filter</h4><blockquote><p><strong>过滤含有指定字段的索引记录</strong></p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;bool&quot;: &#123;<br>      &quot;must&quot;: [<br>        &#123;<br>          &quot;match_all&quot;: &#123;&#125;<br>        &#125;<br>      ],<br>      &quot;filter&quot;: &#123;<br>        &quot;ids&quot;: &#123;<br>          &quot;values&quot;: [<br>            &quot;yGgQrnMBf4NRW_ZXWuBH&quot;,&quot;yWgQrnMBf4NRW_ZXWuBH&quot;<br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="11-统计"><a href="#11-统计" class="headerlink" title="11. 统计"></a>11. 统计</h2><h3 id="11-1-avg（平均值）"><a href="#11-1-avg（平均值）" class="headerlink" title="11.1 avg（平均值）"></a>11.1 avg（平均值）</h3><blockquote><p>计算从聚合文档中提取的数值的平均值</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /course/_search?size=0<br>&#123;<br>  &quot;aggs&quot;: &#123;<br>    &quot;avg_price&quot;: &#123;<br>      &quot;avg&quot;: &#123;<br>        &quot;field&quot;: &quot;price&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="11-2-min-max（最大值-最小值）"><a href="#11-2-min-max（最大值-最小值）" class="headerlink" title="11.2 min/max（最大值/最小值）"></a>11.2 min/max（最大值/最小值）</h3><blockquote><p>计算从聚合文档中提取的数值的最大值/最小值</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs http">#获取讲师名为“风间影月”课程的最高播放量<br>GET /course/_search?size=0<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;bool&quot;: &#123;<br>      &quot;must&quot;: [<br>        &#123;<br>          &quot;term&quot;: &#123;<br>            &quot;lecture&quot;: &#123;<br>              &quot;value&quot;: &quot;风间影月&quot;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;,<br>  &quot;aggs&quot;: &#123;<br>    &quot;max_learningNum&quot;: &#123;<br>      &quot;max&quot;: &#123;<br>        &quot;field&quot;: &quot;learningNum&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="11-3-sum（总和）"><a href="#11-3-sum（总和）" class="headerlink" title="11.3 sum（总和）"></a>11.3 sum（总和）</h3><blockquote><p>计算从聚合文档中提取的数值的总和。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs http">#计算讲师“风间影月”的所有课程的播放量总和<br>GET /course/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;term&quot;: &#123;<br>      &quot;lecture&quot;: &#123;<br>        &quot;value&quot;: &quot;风间影月&quot;<br>      &#125;<br>    &#125;<br>  &#125;,<br>  &quot;aggs&quot;: &#123;<br>    &quot;sum_of_learningNum&quot;: &#123;<br>      &quot;sum&quot;: &#123;<br>        &quot;field&quot;: &quot;learningNum&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="11-4-cardinary（唯一值）"><a href="#11-4-cardinary（唯一值）" class="headerlink" title="11.4 cardinary（唯一值）"></a>11.4 cardinary（唯一值）</h3><blockquote><p>cardinary 求唯一值，即不重复的字段有多少（相当于mysql中的distinct）</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http">#统计目前有多少讲师<br>GET /course/_search?size=0<br>&#123;<br>  &quot;aggs&quot;: &#123;<br>    &quot;lecture_count&quot;: &#123;<br>      &quot;cardinality&quot;: &#123;<br>        &quot;field&quot;: &quot;lecture&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="11-5-terms聚合"><a href="#11-5-terms聚合" class="headerlink" title="11.5 terms聚合"></a>11.5 terms聚合</h3><blockquote><p>terms聚合查询类似mysql中的group by</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs http">#统计各个讲师各有多少门课程<br>GET /course/_search?size=0<br>&#123;<br>  &quot;aggs&quot;: &#123;<br>    &quot;count_by_lecture&quot;: &#123;<br>      &quot;terms&quot;: &#123;<br>        &quot;field&quot;: &quot;lecture&quot;,<br>        &quot;size&quot;: 3<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs http">GET /manniu_content_check_log_v1/_search?size=0<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;bool&quot;: &#123;<br>      &quot;must&quot;: [<br>        &#123;<br>          &quot;term&quot;: &#123;<br>            &quot;operationUserId&quot;: &#123;<br>              &quot;value&quot;: &quot;DrAjywpKzC5j3c2LbLicxZrB9qYW+TPh8xZcvmlStaU=&quot;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;, <br>  &quot;aggs&quot;: &#123;<br>    &quot;count_by_operationUserId&quot;: &#123;<br>      &quot;terms&quot;: &#123;<br>        &quot;field&quot;: &quot;operationUserId&quot;<br>      &#125;,<br>      &quot;aggs&quot;: &#123;<br>        &quot;count_by_checkLogType&quot;: &#123;<br>          &quot;terms&quot;: &#123;<br>            &quot;field&quot;: &quot;checkLogType&quot;<br>          &#125;,<br>          &quot;aggs&quot;: &#123;<br>            &quot;count_by_operationType&quot;: &#123;<br>              &quot;terms&quot;: &#123;<br>                &quot;field&quot;: &quot;operationType&quot;<br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="12-SpringBoot-Data操作ES"><a href="#12-SpringBoot-Data操作ES" class="headerlink" title="12. SpringBoot Data操作ES"></a>12. SpringBoot Data操作ES</h2><h3 id="12-1-引入依赖"><a href="#12-1-引入依赖" class="headerlink" title="12.1 引入依赖"></a>12.1 引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="12-2-编写yml配置"><a href="#12-2-编写yml配置" class="headerlink" title="12.2 编写yml配置"></a>12.2 编写yml配置</h3><ul><li>spring-data（2~3.x版本配置） ElasticTemplate客户端</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br><span class="hljs-attr">data:</span><br><span class="hljs-attr">elasticsearch:</span><br><span class="hljs-attr">cluster-nodes:</span> <span class="hljs-number">172.16</span><span class="hljs-number">.251</span><span class="hljs-number">.142</span><span class="hljs-string">:9300</span><br></code></pre></td></tr></table></figure><ul><li>spring-data（新版本推荐配置）RestHighLevelClient rest客户端</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RestClientConfig</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractElasticsearchConfiguration</span> </span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-meta">@Bean</span><span class="hljs-comment">//将client交给工厂管理</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> RestHighLevelClient <span class="hljs-title">elasticsearchClient</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-comment">//定义客户端配置对象 RestClient</span><br>        <span class="hljs-keyword">final</span> ClientConfiguration clientConfiguration = ClientConfiguration.builder()<br>                .connectedTo(<span class="hljs-string">&quot;localhost:9200&quot;</span>)<br>                .build();<br>        <span class="hljs-comment">//通过RestClients对象创建</span><br>        <span class="hljs-keyword">return</span> RestClients.create(clientConfiguration).rest();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="12-3-使用REST-Client操作ES"><a href="#12-3-使用REST-Client操作ES" class="headerlink" title="12.3 使用REST Client操作ES"></a>12.3 使用REST Client操作ES</h3><h4 id="12-3-1-新增一条文档"><a href="#12-3-1-新增一条文档" class="headerlink" title="12.3.1 新增一条文档"></a>12.3.1 新增一条文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testAddOne</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>    IndexRequest indexRequest = <span class="hljs-keyword">new</span> IndexRequest(<span class="hljs-string">&quot;course&quot;</span>);<br>    indexRequest.source(<span class="hljs-string">&quot;&#123;\&quot;courseId\&quot;:9623,\&quot;title\&quot;:\&quot;python进阶\&quot;,\&quot;description\&quot;:\&quot;Python基础分《Python入门》和《Python进阶》两门课程，《Python进阶》是第二门课程，学习该课程前，请先学习《Python入门》,效果会更好。《Python进阶》课程详细介绍Python强大的函数式编程和面向对象编程，掌握Python高级程序设计的方法。\&quot;,\&quot;price\&quot;:39.9,\&quot;lecture\&quot;:\&quot;廖雪峰\&quot;,\&quot;difficulty\&quot;:\&quot;中级\&quot;,\&quot;learningNum\&quot;:259542,\&quot;updateTime\&quot;:\&quot;2020-01-20 10:20:00\&quot;&#125;&quot;</span>, XContentType.JSON);<br>    IndexResponse indexResponse = restHighLevelClient.index(indexRequest, RequestOptions.DEFAULT);<br>    System.out.println(indexResponse.status());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-3-2-更新一条文档"><a href="#12-3-2-更新一条文档" class="headerlink" title="12.3.2 更新一条文档"></a>12.3.2 更新一条文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testUpdate</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>    UpdateRequest course = <span class="hljs-keyword">new</span> UpdateRequest(<span class="hljs-string">&quot;course&quot;</span>, <span class="hljs-string">&quot;3mj4rnMBf4NRW_ZXYuBB&quot;</span>);<br>    course.doc(<span class="hljs-string">&quot;&#123;\&quot;price\&quot;: 30&#125;&quot;</span>, XContentType.JSON);<br>    UpdateResponse updateResponse = restHighLevelClient.update(course, RequestOptions.DEFAULT);<br>    System.out.println(updateResponse.status());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-3-3-删除一条文档"><a href="#12-3-3-删除一条文档" class="headerlink" title="12.3.3 删除一条文档"></a>12.3.3 删除一条文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testDelete</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>    DeleteRequest deleteRequest = <span class="hljs-keyword">new</span> DeleteRequest(<span class="hljs-string">&quot;course&quot;</span>, <span class="hljs-string">&quot;3mj4rnMBf4NRW_ZXYuBB&quot;</span>);<br>    DeleteResponse deleteResposne = restHighLevelClient.delete(deleteRequest, RequestOptions.DEFAULT);<br>    System.out.println(deleteResposne.status());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-3-4-批量操作文档"><a href="#12-3-4-批量操作文档" class="headerlink" title="12.3.4 批量操作文档"></a>12.3.4 批量操作文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testBulk</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br><br>    BulkRequest bulkRequest = <span class="hljs-keyword">new</span> BulkRequest();<br>    <span class="hljs-comment">//新增</span><br>    IndexRequest indexRequest = <span class="hljs-keyword">new</span> IndexRequest(<span class="hljs-string">&quot;course&quot;</span>);<br>    indexRequest.source(<span class="hljs-string">&quot;&#123;\&quot;courseId\&quot;:9622,\&quot;title\&quot;:\&quot;初识python\&quot;,\&quot;description\&quot;:\&quot;Python开发的入门教程\&quot;,\&quot;price\&quot;:29.9,\&quot;lecture\&quot;:\&quot;廖雪峰\&quot;,\&quot;difficulty\&quot;:\&quot;初级\&quot;,\&quot;learningNum\&quot;:768802,\&quot;updateTime\&quot;:\&quot;2019-10-03\&quot;&#125;&quot;</span>, XContentType.JSON);<br>    bulkRequest.add(indexRequest);<br>    <span class="hljs-comment">//更新</span><br>    UpdateRequest updateRequest = <span class="hljs-keyword">new</span> UpdateRequest(<span class="hljs-string">&quot;course&quot;</span>, <span class="hljs-string">&quot;xmgQrnMBf4NRW_ZXWuBH&quot;</span>);<br>    updateRequest.doc(<span class="hljs-string">&quot;&#123;\&quot;price\&quot;: 300.00&#125;&quot;</span>, XContentType.JSON);<br>    bulkRequest.add(updateRequest);<br>    <span class="hljs-comment">//删除</span><br>    DeleteRequest deleteRequest = <span class="hljs-keyword">new</span> DeleteRequest(<span class="hljs-string">&quot;course&quot;</span>, <span class="hljs-string">&quot;32gmr3MBf4NRW_ZXYODq&quot;</span>);<br>    bulkRequest.add(deleteRequest);<br><br>    BulkResponse bulkResponse = restHighLevelClient.bulk(bulkRequest, RequestOptions.DEFAULT);<br>    BulkItemResponse[] bulkItemResponses = bulkResponse.getItems();<br>    <span class="hljs-keyword">for</span> (BulkItemResponse bulkItemResponse:bulkItemResponses) &#123;<br>        System.out.println(bulkItemResponse.getId() + <span class="hljs-string">&quot;...&quot;</span> + bulkItemResponse.status());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-3-5-查询文档"><a href="#12-3-5-查询文档" class="headerlink" title="12.3.5 查询文档"></a>12.3.5 查询文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSearch</span><span class="hljs-params">()</span> </span>&#123;<br>    SearchRequest searchRequest = <span class="hljs-keyword">new</span> SearchRequest(<span class="hljs-string">&quot;course&quot;</span>);<br>    SearchSourceBuilder searchSourceBuilder = <span class="hljs-keyword">new</span> SearchSourceBuilder();<br>    <span class="hljs-comment">//关键字精确匹配</span><br>    TermQueryBuilder termQueryBuilder = <span class="hljs-keyword">new</span> TermQueryBuilder(<span class="hljs-string">&quot;title&quot;</span>,  <span class="hljs-string">&quot;springboot&quot;</span>);<br>    <span class="hljs-comment">//范围查询</span><br>    RangeQueryBuilder rangeQueryBuilder = <span class="hljs-keyword">new</span> RangeQueryBuilder(<span class="hljs-string">&quot;price&quot;</span>);<br>    rangeQueryBuilder.gte(<span class="hljs-number">0</span>);<br>    rangeQueryBuilder.lte(<span class="hljs-number">100</span>);<br>    <span class="hljs-comment">//前缀查询</span><br>    PrefixQueryBuilder prefixQueryBuilder = <span class="hljs-keyword">new</span> PrefixQueryBuilder(<span class="hljs-string">&quot;title&quot;</span>, <span class="hljs-string">&quot;mysql&quot;</span>);<br>    <span class="hljs-comment">//通配符查询</span><br>    WildcardQueryBuilder wildcardQueryBuilder = <span class="hljs-keyword">new</span> WildcardQueryBuilder(<span class="hljs-string">&quot;lecture&quot;</span>, <span class="hljs-string">&quot;编程*&quot;</span>);<br>    <span class="hljs-comment">//ids查询</span><br>    IdsQueryBuilder idsQueryBuilder = QueryBuilders.idsQuery().addIds(<span class="hljs-string">&quot;4Ggwr3MBf4NRW_ZXJ-BX&quot;</span>,<span class="hljs-string">&quot;4WhGr3MBf4NRW_ZXBOBT&quot;</span>);<br>    <span class="hljs-comment">//模糊查询</span><br>    FuzzyQueryBuilder fuzzyQueryBuilder = <span class="hljs-keyword">new</span> FuzzyQueryBuilder(<span class="hljs-string">&quot;title&quot;</span>, <span class="hljs-string">&quot;springbeet&quot;</span>);<br>    <span class="hljs-comment">//多字段查询</span><br>    MultiMatchQueryBuilder multiMatchQueryBuilder = <span class="hljs-keyword">new</span> MultiMatchQueryBuilder(<span class="hljs-string">&quot;项目&quot;</span>, <span class="hljs-string">&quot;title&quot;</span>, <span class="hljs-string">&quot;description&quot;</span>);<br>    <span class="hljs-comment">//多字段分词查询</span><br>    QueryStringQueryBuilder queryStringQueryBuilder = <span class="hljs-keyword">new</span> QueryStringQueryBuilder(<span class="hljs-string">&quot;实战教学&quot;</span>);<br>    queryStringQueryBuilder.analyzer(<span class="hljs-string">&quot;ik_smart&quot;</span>);<br>    queryStringQueryBuilder.field(<span class="hljs-string">&quot;description&quot;</span>);<br>    <span class="hljs-comment">//bool查询</span><br>    BoolQueryBuilder boolQueryBuilder = <span class="hljs-keyword">new</span> BoolQueryBuilder();<br>    boolQueryBuilder.must(QueryBuilders.termQuery(<span class="hljs-string">&quot;title&quot;</span>, <span class="hljs-string">&quot;springboot&quot;</span>));<br>    boolQueryBuilder.must(QueryBuilders.termQuery(<span class="hljs-string">&quot;lecture&quot;</span>, <span class="hljs-string">&quot;编程不良人&quot;</span>));<br>    searchSourceBuilder.query(boolQueryBuilder);<br><br>    <span class="hljs-comment">//高亮</span><br>    HighlightBuilder highlightBuilder = <span class="hljs-keyword">new</span> HighlightBuilder().field(<span class="hljs-string">&quot;title&quot;</span>).requireFieldMatch(<span class="hljs-keyword">true</span>).preTags(<span class="hljs-string">&quot;&lt;span style=&#x27;color:red&#x27;&gt;&quot;</span>).postTags(<span class="hljs-string">&quot;&lt;/span&gt;&quot;</span>);<br>    searchSourceBuilder.highlighter(highlightBuilder);<br>    searchSourceBuilder.from(<span class="hljs-number">0</span>);<br>    searchSourceBuilder.size(<span class="hljs-number">5</span>);<br>    searchSourceBuilder.sort(<span class="hljs-string">&quot;updateTime&quot;</span>, SortOrder.DESC);<br><br>    searchRequest.source(searchSourceBuilder);<br>    <span class="hljs-keyword">try</span> &#123;<br>        SearchResponse searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);<br>        SearchHit[] hits = searchResponse.getHits().getHits();<br>        <span class="hljs-keyword">for</span> (SearchHit searchHit:hits) &#123;<br>            Map&lt;String, HighlightField&gt; highlightFields = searchHit.getHighlightFields();<br>            <span class="hljs-keyword">if</span> (highlightFields.containsKey(<span class="hljs-string">&quot;title&quot;</span>))&#123;<br>                System.out.println(<span class="hljs-string">&quot;title&quot;</span> + <span class="hljs-string">&quot;...&quot;</span> + highlightFields.get(<span class="hljs-string">&quot;title&quot;</span>).fragments()[<span class="hljs-number">0</span>].toString());;<br>            &#125;<br>            System.out.println(searchHit.getSourceAsMap());<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>        e.printStackTrace();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>强大、更灵活，单不能友好的对象操作</p><h3 id="12-4-面向对象操作"><a href="#12-4-面向对象操作" class="headerlink" title="12.4 面向对象操作"></a>12.4 面向对象操作</h3><p><img src="/2021/01/29/elasticsearch/../images/elasticsearch.assets/es%E5%AD%98%E5%82%A8java%E5%AF%B9%E8%B1%A1.png" alt="es存储java对象"></p><blockquote><p>ElasticSearchRepository接口面向对象 提供一系列CRUD的方法</p></blockquote><h4 id="12-4-1-编写entity"><a href="#12-4-1-编写entity" class="headerlink" title="12.4.1 编写entity"></a>12.4.1 编写entity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Document</span>作用在类上，作用：将Student对象映射成ES中一条json格式文档</span><br><span class="hljs-comment"> * indexName用来指定这个对象的转为json文档存入哪个索引中 要求：ES服务器中之前不存在此索引名</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Document(indexName = &quot;student&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span> </span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用来将对象中的id属性与文档中的_id相对应</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Id</span><br>    <span class="hljs-keyword">private</span> String id;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Field</span>用在属性上 代表mapping中一个属性 type:用来指定属性类型 analyzer:指定分词器</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Field(type = FieldType.Text, analyzer = &quot;ik_smart&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-meta">@Field(type = FieldType.Integer)</span><br>    <span class="hljs-keyword">private</span> Integer age;<br>    <span class="hljs-meta">@Field(type = FieldType.Date, format = DateFormat.date_time)</span><br>    <span class="hljs-meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;)</span><br>    <span class="hljs-keyword">private</span> Date birth;<br>    <span class="hljs-meta">@Field(type = FieldType.Text, analyzer = &quot;ik_smart&quot;)</span><br>    <span class="hljs-keyword">private</span> String content;<br>    <span class="hljs-meta">@Field(type = FieldType.Text, analyzer = &quot;ik_smart&quot;)</span><br>    <span class="hljs-keyword">private</span> String address;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-4-2-编写StudentRepository"><a href="#12-4-2-编写StudentRepository" class="headerlink" title="12.4.2 编写StudentRepository"></a>12.4.2 编写StudentRepository</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//Student为当前操作的对象，String为主键的类型</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">EmpRepository</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ElasticsearchRepository</span>&lt;<span class="hljs-title">Student</span>, <span class="hljs-title">String</span>&gt; </span>&#123;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-4-3-新增或更新一条文档"><a href="#12-4-3-新增或更新一条文档" class="headerlink" title="12.4.3 新增或更新一条文档"></a>12.4.3 新增或更新一条文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSave</span><span class="hljs-params">()</span> </span>&#123;<br>    Student student = <span class="hljs-keyword">new</span> Student();<br>    <span class="hljs-comment">//        student.setId(UUID.randomUUID().toString());</span><br>    student.setName(<span class="hljs-string">&quot;张三&quot;</span>);<br>    student.setAge(<span class="hljs-number">23</span>);<br>    student.setBirth(<span class="hljs-keyword">new</span> Date());<br>    student.setContent(<span class="hljs-string">&quot;江湖人称张三&quot;</span>);<br>    student.setAddress(<span class="hljs-string">&quot;上海&quot;</span>);<br>    studentRepository.save(student);<br>&#125;<br><br>#批量新增<br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSaveAll</span><span class="hljs-params">()</span> </span>&#123;<br>    List&lt;Student&gt; studentList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>    studentList.add(<span class="hljs-keyword">new</span> Student(UUID.randomUUID().toString(),<span class="hljs-string">&quot;梁爽&quot;</span>, <span class="hljs-number">21</span>, <span class="hljs-keyword">new</span> Date(), <span class="hljs-string">&quot;向着前路，无需退缩，冷美人，毒舌但是内心很柔软，是一个每天晚上10点半睡觉，早起自律的冰美人。&quot;</span>, <span class="hljs-string">&quot;北京&quot;</span>));<br>    studentList.add(<span class="hljs-keyword">new</span> Student(UUID.randomUUID().toString(),<span class="hljs-string">&quot;罗艳&quot;</span>, <span class="hljs-number">20</span>, <span class="hljs-keyword">new</span> Date(), <span class="hljs-string">&quot;内心明朗，未来昂扬的二次元少女，喜欢玩游戏，沉浸在游戏里面。&quot;</span>, <span class="hljs-string">&quot;深圳&quot;</span>));<br>    studentList.add(<span class="hljs-keyword">new</span> Student(UUID.randomUUID().toString(),<span class="hljs-string">&quot;段家宝&quot;</span>, <span class="hljs-number">21</span>, <span class="hljs-keyword">new</span> Date(), <span class="hljs-string">&quot;追星少女，心里有爱，脚下无碍，来自商人家庭，性格单纯。&quot;</span>, <span class="hljs-string">&quot;北京&quot;</span>));<br>    studentRepository.saveAll(studentList);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-4-4-查询"><a href="#12-4-4-查询" class="headerlink" title="12.4.4 查询"></a>12.4.4 查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testFindOne</span><span class="hljs-params">()</span> </span>&#123;<br>    Optional&lt;Student&gt; optional = studentRepository.findById(<span class="hljs-string">&quot;41523f7f-bd3a-4fa0-9b34-c0c480f3b1a0&quot;</span>);<br>    Student student = optional.get();<br>    System.out.println(student);<br>&#125;<br><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testFindAll</span><span class="hljs-params">()</span> </span>&#123;<br>    Iterable&lt;Student&gt; students = studentRepository.findAll(Sort.by(Sort.Order.desc(<span class="hljs-string">&quot;birth&quot;</span>)));<br>    students.forEach(student -&gt; System.out.println(student));<br>&#125;<br><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testFindPage</span><span class="hljs-params">()</span> </span>&#123;<br>    Page&lt;Student&gt; studentList = studentRepository.findAll(PageRequest.of(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>, Sort.by(Sort.Order.desc(<span class="hljs-string">&quot;age&quot;</span>))));<br>    studentList.forEach(student -&gt; System.out.println(student));<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-4-5-删除"><a href="#12-4-5-删除" class="headerlink" title="12.4.5 删除"></a>12.4.5 删除</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testDelete</span><span class="hljs-params">()</span> </span>&#123;<br>    studentRepository.deleteById(<span class="hljs-string">&quot;fc04ed3b-5b08-43bb-bbc0-b51dcf9f8315&quot;</span>);<br>&#125;<br><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testDeleteAll</span><span class="hljs-params">()</span> </span>&#123;<br>    studentRepository.deleteAll();<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-4-6-高亮查询"><a href="#12-4-6-高亮查询" class="headerlink" title="12.4.6 高亮查询"></a>12.4.6 高亮查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSearch</span><span class="hljs-params">()</span> </span>&#123;<br>    SearchRequest searchRequest = <span class="hljs-keyword">new</span> SearchRequest(<span class="hljs-string">&quot;student&quot;</span>);<br>    SearchSourceBuilder sourceBuilder = <span class="hljs-keyword">new</span> SearchSourceBuilder();<br>    BoolQueryBuilder boolQueryBuilder = <span class="hljs-keyword">new</span> BoolQueryBuilder();<br>    boolQueryBuilder.must(QueryBuilders.termQuery(<span class="hljs-string">&quot;address&quot;</span>, <span class="hljs-string">&quot;北京&quot;</span>));<br>    sourceBuilder.query(boolQueryBuilder)<br>        .from(<span class="hljs-number">0</span>)<br>        .size(<span class="hljs-number">5</span>)<br>        .sort(<span class="hljs-string">&quot;birth&quot;</span>, SortOrder.ASC)<br>        .highlighter(<span class="hljs-keyword">new</span> HighlightBuilder().field(<span class="hljs-string">&quot;*&quot;</span>).preTags(<span class="hljs-string">&quot;&lt;em&gt;&quot;</span>).postTags(<span class="hljs-string">&quot;&lt;/em&gt;&quot;</span>));<br>    searchRequest.source(sourceBuilder);<br>    <span class="hljs-keyword">try</span> &#123;<br>        SearchResponse searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);<br>        SearchHit[] hits = searchResponse.getHits().getHits();<br>        List&lt;Student&gt; studentList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>        <span class="hljs-keyword">for</span> (SearchHit searchHit:hits) &#123;<br>            Map&lt;String, Object&gt; data = searchHit.getSourceAsMap();<br>            Student student = <span class="hljs-keyword">new</span> Student();<br>            student.setId(searchHit.getId());<br>            student.setName(data.get(<span class="hljs-string">&quot;name&quot;</span>).toString());<br>            student.setAge(Integer.parseInt(data.get(<span class="hljs-string">&quot;age&quot;</span>).toString()));<br>            student.setBirth(<span class="hljs-keyword">new</span> SimpleDateFormat(<span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>).parse(data.get(<span class="hljs-string">&quot;birth&quot;</span>).toString()));<br>            student.setContent(data.get(<span class="hljs-string">&quot;content&quot;</span>).toString());<br>            student.setAddress(data.get(<span class="hljs-string">&quot;address&quot;</span>).toString());<br>            Map&lt;String, HighlightField&gt; highlightFields = searchHit.getHighlightFields();<br>            <span class="hljs-keyword">if</span> (highlightFields.containsKey(<span class="hljs-string">&quot;name&quot;</span>)) &#123;<br>                student.setName(highlightFields.get(<span class="hljs-string">&quot;name&quot;</span>).fragments()[<span class="hljs-number">0</span>].toString());<br>            &#125;<br>            <span class="hljs-keyword">if</span> (highlightFields.containsKey(<span class="hljs-string">&quot;content&quot;</span>)) &#123;<br>                student.setContent(highlightFields.get(<span class="hljs-string">&quot;content&quot;</span>).fragments()[<span class="hljs-number">0</span>].toString());<br>            &#125;<br>            <span class="hljs-keyword">if</span> (highlightFields.containsKey(<span class="hljs-string">&quot;address&quot;</span>)) &#123;<br>                student.setAddress(highlightFields.get(<span class="hljs-string">&quot;address&quot;</span>).fragments()[<span class="hljs-number">0</span>].toString());<br>            &#125;<br>            studentList.add(student);<br>        &#125;<br>        studentList.forEach(student -&gt; System.out.println(student));<br>    &#125; <span class="hljs-keyword">catch</span> (IOException | ParseException e) &#123;<br>        e.printStackTrace();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="12-5-自定义基本查询"><a href="#12-5-自定义基本查询" class="headerlink" title="12.5 自定义基本查询"></a>12.5 自定义基本查询</h4><table><thead><tr><th>Keyword</th><th>Sample</th><th>Elasticsearch Query String</th></tr></thead><tbody><tr><td><code>And</code></td><td><code>findByNameAndPrice</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : [ &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;, &#123;&quot;field&quot; : &#123;&quot;price&quot; : &quot;?&quot;&#125;&#125; ]&#125;&#125;</code></td></tr><tr><td><code>Or</code></td><td><code>findByNameOrPrice</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;should&quot; : [ &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;, &#123;&quot;field&quot; : &#123;&quot;price&quot; : &quot;?&quot;&#125;&#125; ]&#125;&#125;</code></td></tr><tr><td><code>Is</code></td><td><code>findByName</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Not</code></td><td><code>findByNameNot</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must_not&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Between</code></td><td><code>findByPriceBetween</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;range&quot; : &#123;&quot;price&quot; : &#123;&quot;from&quot; : ?,&quot;to&quot; : ?,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>LessThanEqual</code></td><td><code>findByPriceLessThan</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;range&quot; : &#123;&quot;price&quot; : &#123;&quot;from&quot; : null,&quot;to&quot; : ?,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>GreaterThanEqual</code></td><td><code>findByPriceGreaterThan</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;range&quot; : &#123;&quot;price&quot; : &#123;&quot;from&quot; : ?,&quot;to&quot; : null,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Before</code></td><td><code>findByPriceBefore</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;range&quot; : &#123;&quot;price&quot; : &#123;&quot;from&quot; : null,&quot;to&quot; : ?,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>After</code></td><td><code>findByPriceAfter</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;range&quot; : &#123;&quot;price&quot; : &#123;&quot;from&quot; : ?,&quot;to&quot; : null,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Like</code></td><td><code>findByNameLike</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &#123;&quot;query&quot; : &quot;?*&quot;,&quot;analyze_wildcard&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>StartingWith</code></td><td><code>findByNameStartingWith</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &#123;&quot;query&quot; : &quot;?*&quot;,&quot;analyze_wildcard&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>EndingWith</code></td><td><code>findByNameEndingWith</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &#123;&quot;query&quot; : &quot;*?&quot;,&quot;analyze_wildcard&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Contains/Containing</code></td><td><code>findByNameContaining</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &#123;&quot;query&quot; : &quot;**?**&quot;,&quot;analyze_wildcard&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>In</code></td><td><code>findByNameIn</code><br><code>(Collection&lt;String&gt;names)</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;bool&quot; : &#123;&quot;should&quot; : [ &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;, &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125; ]&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>NotIn</code></td><td><code>findByNameNotIn</code><br><code>(Collection&lt;String&gt;names)</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must_not&quot; : &#123;&quot;bool&quot; : &#123;&quot;should&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Near</code></td><td><code>findByStoreNear</code></td><td><code>Not Supported Yet !</code></td></tr><tr><td><code>True</code></td><td><code>findByAvailableTrue</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;available&quot; : true&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>False</code></td><td><code>findByAvailableFalse</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;available&quot; : false&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>OrderBy</code></td><td><code>findByAvailable</code><br><code>TrueOrderByNameDesc</code></td><td><code>&#123;&quot;sort&quot; : [&#123; &quot;name&quot; : &#123;&quot;order&quot; : &quot;desc&quot;&#125; &#125;],&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;available&quot; : true&#125;&#125;&#125;&#125;</code></td></tr></tbody></table><h2 id="13-ES中集群相关概念"><a href="#13-ES中集群相关概念" class="headerlink" title="13. ES中集群相关概念"></a>13. ES中集群相关概念</h2><h3 id="13-1-相关概念"><a href="#13-1-相关概念" class="headerlink" title="13.1 相关概念"></a>13.1 相关概念</h3><h4 id="集群-cluster"><a href="#集群-cluster" class="headerlink" title="集群(cluster)"></a>集群(cluster)</h4><p>1.单节点压力问题  并发压力   物理资源上限压力</p><p>2.数据冗余备份能力</p><blockquote><p>一个集群就是由一个或多个节点组织在一起，它们共同持有你整个的数据，并一起提供索引和搜索功能。一个集群 由一个唯一的名字标识，这个名字默认就是<code>elasticsearch</code>。这个名字是重要的，因为一个节点只能通过指定某个集群的名字，来加入这个集群。在产品环境中显式地设定这个名字是一个好习惯，但是使用默认值来进行测试/开发也是不错的。 </p></blockquote><h4 id="节点-node"><a href="#节点-node" class="headerlink" title="节点(node)"></a>节点(node)</h4><blockquote><p>一个节点是你集群中的一个服务器，作为集群的一部分，它存储你的数据，参与集群的索引和搜索功能。和集群类似，一个节点也是由一个名字来标识的，默认情况下，这个名字是一个随机的漫威漫画角色的名字，这个名字会在启动的时候赋予节点。这个名字对于管理工作来说挺重要的，因为在这个管理过程中，你会去确定网络中的哪些服务器对应于Elasticsearch集群中的哪些节点。 </p></blockquote><blockquote><p>一个节点可以通过配置集群名称的方式来加入一个指定的集群。默认情况下，每个节点都会被安排加入到一个叫 做“elasticsearch”的集群中，这意味着，如果你在你的网络中启动了若干个节点，并假定它们能够相互发现彼此，它们将会自动地形成并加入到一个叫做“elasticsearch”的集群中。 </p></blockquote><blockquote><p>在一个集群里，只要你想，可以拥有任意多个节点。而且，如果当前你的网络中没有运行任何Elasticsearch节点， 这时启动一个节点，会默认创建并加入一个叫做“elasticsearch”的集群。 </p></blockquote><h4 id="分片和复制-shards-amp-replicas"><a href="#分片和复制-shards-amp-replicas" class="headerlink" title="分片和复制(shards &amp; replicas)"></a>分片和复制(shards &amp; replicas)</h4><blockquote><p>一个索引可以存储超出单个结点硬件限制的大量数据。比如，一个具有10亿文档的索引占据1TB的磁盘空间，而任一节点都没有这样大的磁盘空间;或者单个节点处理搜索请求，响应太慢。为了解决这个问题，Elasticsearch提供了将索引划分成多份的能力，这些份就叫做分片。当你创建一个索引的时候，你可以指定你想要的分片的数量。每个分片本身也是一个功能完善并且独立的“索引”，这个“索引”可以被放置 到集群中的任何节点上。 分片之所以重要，主要有两方面的原因: </p></blockquote><blockquote><p>允许你水平分割/扩展你的内容容量允许你在分片(潜在地，位于多个节点上)之上进行分布式的、并行的操作，进而提高性能/吞吐量 至于一个分片怎样分布，它的文档怎样聚合回搜索请求，是完全由Elasticsearch管理的，对于作为用户的你来说，这些都是透明的。 </p></blockquote><blockquote><p>在一个网络/云的环境里，失败随时都可能发生，在某个分片/节点不知怎么的就处于离线状态，或者由于任何原因 消失了。这种情况下，有一个故障转移机制是非常有用并且是强烈推荐的。为此目的，Elasticsearch允许你创建分 片的一份或多份拷贝，这些拷贝叫做复制分片，或者直接叫复制。复制之所以重要，主要有两方面的原因: </p></blockquote><blockquote><p> 在分片/节点失败的情况下，提供了高可用性。因为这个原因，注意到复制分片从不与原/主要 (original/primary)分片置于同一节点上是非常重要的。 扩展你的搜索量/吞吐量，因为搜索可以在所有的复制上并行运行 </p></blockquote><blockquote><p>总之，每个索引可以被分成多个分片。一个索引也可以被复制0次(意思是没有复制)或多次。一旦复制了，每个 索引就有了主分片(作为复制源的原来的分片)和复制分片(主分片的拷贝)之别。分片和复制的数量可以在索引创建的时候指定。在索引创建之后，你可以在任何时候动态地改变复制数量，但是不能改变分片的数量。 </p></blockquote><blockquote><p>默认情况下，<code>Elasticsearch中的每个索引被分片1个主分片和1个复制</code>，这意味着，如果你的集群中至少有两个节点，你的索引将会有1个主分片和另外1个复制分片(1个完全拷贝)，这样的话每个索引总共就有10个分片。一个索引的多个分片可以存放在集群中的一台主机上，也可以存放在多台主机上，这取决于你的集群机器数量。主分片和复制分片的具体位置是由ES内在的策略所决定的。 </p></blockquote><h3 id="13-2-快速搭建集群"><a href="#13-2-快速搭建集群" class="headerlink" title="13.2 快速搭建集群"></a>13.2 快速搭建集群</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 将原有的ES安装包复制三份<br><span class="hljs-bullet">2.</span> 删除复制目录中的data目录<br><span class="hljs-bullet">3.</span> 编辑每个文件夹中config目录中jvm.options文件<br><span class="hljs-section"># 修改如下：(启动一个elasticsearch占用300m)</span><br>-Xms300m<br>-Xmx300m<br><span class="hljs-bullet">4.</span> 分别修改三个文件夹中config目录中的elasticsearch.yml文件<br><span class="hljs-section"># 修改如下：</span><br>cluster.name: my-es#集群名称（集群名称必须一致）<br>node.name: node-1#节点名称（节点名称不能一致）<br>network.host: 0.0.0.0#监听地址<br>http.port: 9201#监听端口（在一台机器时服务端口不能一致）<br>discovery.seeds<span class="hljs-emphasis">_hosts: [&quot;127.0.0.1:9302&quot;,&quot;127.0.0.1:9303&quot;]#另外两个节点的ip</span><br><span class="hljs-emphasis">cluster.initial_</span>master<span class="hljs-emphasis">_nodes: [&quot;node-1&quot;]#初始化主节点</span><br><span class="hljs-emphasis">gateway.recover_</span>after<span class="hljs-emphasis">_nodes: 3#集群可做master的最小节点数</span><br><span class="hljs-emphasis">transport.tcp.port: 9301#集群TCP端口（在一台机器搭建必须修改）</span><br><span class="hljs-emphasis">5. 启动多个es</span><br><span class="hljs-emphasis">6. 查看节点状态</span><br><span class="hljs-emphasis">7. 查看集群健康</span><br><span class="hljs-emphasis">http:127.0.0.1:9201/_</span>cat/health?v<br></code></pre></td></tr></table></figure><p><code>es默认不允许跨域连接，若想实现跨域，进入elasticsearch的config目录下修改文件elasticsearch.yml：末尾添加 http.cors.enabled: true 　　　　 http.cors.allow-origin: &quot;*&quot; 然后再重启</code></p><h3 id="13-3-安装head插件"><a href="#13-3-安装head插件" class="headerlink" title="13.3 安装head插件"></a>13.3 安装head插件</h3><blockquote><p>由于head插件本质上还是一个nodejs的工程，因此需要安装node，使用npm来安装依赖的包</p></blockquote><ul><li><p><strong>安装node.js</strong></p><p>官网<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a>下载windows的msi版本进行傻瓜式安装</p><p>安装完成后打开cmd查看版本node -v</p></li><li><p><strong>安装grunt</strong></p><p>grunt是一个很方便的构建工具，可以进行打包压缩、测试、执行等等的工作，head插件就是通过grunt启动的。因此需要安装grunt。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">--registry=https://registry.npm.taobao.org</span><br><span class="hljs-string">cnpm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">grunt-cli</span><br></code></pre></td></tr></table></figure><p>安装完成之后查看版本号：grunt -version</p></li><li><p><strong>下载插件</strong></p><p><a href="https://github.com/mobz/elasticsearch-head">https://github.com/mobz/elasticsearch-head</a>下载解压</p></li><li><p><strong>安装插件</strong></p><p>cmd终端进入elasticsearch-head-master目录，执行npm install</p></li><li><p><strong>修改elasticsearch配置文件</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment">#是否支持跨域</span><br><span class="hljs-attr">http.cors.enabled:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment">#表示支持所有域名</span><br><span class="hljs-attr">http.cors.allow-origin:</span> <span class="hljs-string">&quot;*&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>启动并查看</strong></p><p>执行npm run start</p><p><img src="/elasticsearch.assets/head%E6%8F%92%E4%BB%B6%E5%90%AF%E5%8A%A8.png" alt="head插件启动"></p><p>浏览器访问localhost:9100</p><p><img src="/2021/01/29/elasticsearch/elasticsearch.assets/header%E6%8F%92%E4%BB%B6%E8%AE%BF%E9%97%AE-1596509552631.png" alt="header插件访问"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>后端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ElasticSearch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github + Hexo搭建个人博客</title>
    <link href="/2021/01/28/build%20a%20personal%20blog/"/>
    <url>/2021/01/28/build%20a%20personal%20blog/</url>
    
    <content type="html"><![CDATA[<p>现在有很多网站可以用来写博客，但是博客网站的主题各式各样，甚至有的页面繁杂，不能专注于博客阅读。如果你有这样的烦恼，就开始选择自己喜欢的主题搭建自己的博客吧~</p><h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h2><h3 id="本文所使用的环境："><a href="#本文所使用的环境：" class="headerlink" title="本文所使用的环境："></a>本文所使用的环境：</h3><blockquote><ul><li>windows10</li><li><a href="mailto:&#103;&#x69;&#116;&#64;&#50;&#x2e;&#50;&#x38;&#46;&#x30;">&#103;&#x69;&#116;&#64;&#50;&#x2e;&#50;&#x38;&#46;&#x30;</a></li><li><a href="mailto:&#110;&#x6f;&#100;&#x65;&#x2e;&#x6a;&#115;&#64;&#118;&#x31;&#x32;&#46;&#49;&#56;&#46;&#x33;">&#110;&#x6f;&#100;&#x65;&#x2e;&#x6a;&#115;&#64;&#118;&#x31;&#x32;&#46;&#49;&#56;&#46;&#x33;</a></li><li><a href="mailto:&#104;&#101;&#120;&#111;&#64;&#52;&#46;&#50;&#x2e;&#x30;">&#104;&#101;&#120;&#111;&#64;&#52;&#46;&#50;&#x2e;&#x30;</a></li></ul></blockquote><p>另外，需要注册github账号。</p><h2 id="2-创建github仓库"><a href="#2-创建github仓库" class="headerlink" title="2. 创建github仓库"></a>2. 创建github仓库</h2><p>新建一个名为<code>你的github用户名.github.io</code>仓库。比如github的用户名是zhangsan，那就建一个zhangsan.github.io仓库，以后博客访问地址就是<code>http://zhangsan.github.io</code>。由此可见每个github账户最多只能创建一个这样的仓库。</p><p>注意：注册的邮箱一定要验证，否则不会成功</p><h2 id="3-配置SSH-key"><a href="#3-配置SSH-key" class="headerlink" title="3. 配置SSH key"></a>3. 配置SSH key</h2><h3 id="3-1-为什么要配置SSH-key"><a href="#3-1-为什么要配置SSH-key" class="headerlink" title="3.1 为什么要配置SSH key?"></a>3.1 为什么要配置SSH key?</h3><p>因为提交代码要有github权限才可以，如果不配置，每次提交代码都会要求填写用户名和密码，又麻烦又不安全，所以使用ssh key来解决本地和服务器的连接问题。</p><h3 id="3-2-怎么配置SSH-key"><a href="#3-2-怎么配置SSH-key" class="headerlink" title="3.2 怎么配置SSH key?"></a>3.2 怎么配置SSH key?</h3><p>首先检查本地是否已存在ssh密钥：密钥一般存放在用户下面，可以去找找看</p><p>![image-20210202100132313](../../images/build a personal blog.assets/image-20210202100132313.png)</p><p>如果没有， 说明第一次使用git，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;邮件地址&quot;</span><br></code></pre></td></tr></table></figure><p>然后3次回车，最终生成上图所示的.ssh文件夹，将id_rsa.pub文件内容复制到github个人设置 → SSH and GPG keys → New SSH key 的key位置，title随便填，保存即可。</p><h3 id="3-3-测试是否成功"><a href="#3-3-测试是否成功" class="headerlink" title="3.3 测试是否成功"></a>3.3 测试是否成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>看到以下信息即表示SSH配置成功！</p><p>![image-20210202100938484](../../images/build a personal blog.assets/image-20210202100938484.png)</p><p>此外，还需要配置用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;zhangsan&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;xxx@163.com&quot;</span><br></code></pre></td></tr></table></figure><h2 id="4-使用hexo搭建博客"><a href="#4-使用hexo搭建博客" class="headerlink" title="4. 使用hexo搭建博客"></a>4. 使用hexo搭建博客</h2><p>![image-20210202103709728](../../images/build a personal blog.assets/image-20210202103709728.png)</p><p>官网：<a href="http://hexo.io/">http://hexo.io</a></p><p><code>Hexo</code>是一个<code>简单</code>、<code>快速</code>、<code>强大</code>的基于Github Pages的博客发布工具</p><p>可以调用Hexo命令将本地的md文档批量转化成html文件，然后将页面提交到github</p><h3 id="4-1-hexo安装与初始化"><a href="#4-1-hexo安装与初始化" class="headerlink" title="4.1 hexo安装与初始化"></a>4.1 hexo安装与初始化</h3><p>使用<code>npm</code>安装hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo<br></code></pre></td></tr></table></figure><p>![npm安装hexo](../../images/build a personal blog.assets/npm安装hexo.png)</p><p>hexo初始化：</p><p>在你想存放代码的位置新建文件夹如orange，cd到这个目录，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p>![hexo init](../../images/build a personal blog.assets/hexo init.png)</p><p>此时orange文件夹会生成文件夹和文件，执行命令生成html文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><p>![hexo生成html](../../images/build a personal blog.assets/hexo生成html.png)</p><p>执行命令本地启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>![启动服务](../../images/build a personal blog.assets/启动服务.png)</p><p>浏览器访问<code>localhost:4000</code>，默认Hello World:</p><p>![初页面](../../images/build a personal blog.assets/初页面.png)</p><h3 id="4-2-修改主题"><a href="#4-2-修改主题" class="headerlink" title="4.2 修改主题"></a>4.2 修改主题</h3><p>官方主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>推荐简洁但不单调主题：<a href="https://github.com/fluid-dev/hexo-theme-fluid">hexo-theme-fluid</a>、<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>(需要查看demo可以到github对应的README)</p><p>下载主题，orange目录下执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid themes/fluid<br></code></pre></td></tr></table></figure><p>下载后的主题都在themes文件夹下</p><p>修改orange目录下的<code>_config.yml</code>文件，修改行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br></code></pre></td></tr></table></figure><p>然后执行<code>hexo g</code>重新生成，执行<code>hexo s</code>启动服务，访问<code>http://localhost:4000</code>(以下图片是改过背景图的)</p><p>![image-20210202111645805](../../images/build a personal blog.assets/image-20210202111645805.png)</p><h3 id="4-3-上传到github"><a href="#4-3-上传到github" class="headerlink" title="4.3 上传到github"></a>4.3 上传到github</h3><p>安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>上传之前需要配置上传参数，打开orange文件夹下的_config.yml，添加内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:changchanghou/changchanghou.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>orange目录下打开git bash，执行<code>hexo d</code>命令即可</p><p>上传之后等几分钟就可以访问<a href="http://changchanghou.github.io/">http://changchanghou.github.io</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
